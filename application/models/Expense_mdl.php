<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Expense_mdl extends CI_Model {

	public function get_expense($year,$month){

		$month_new = "";
		if($month < 10){
			$month_new = '0'.$month;
		}else{
			$month_new = $month;
		}

		$tanggal = $year.'-'.$month_new;

		$mainQuery = " SELECT GH.NATURE,(SELECT DESCRIPTION FROM MASTER_COA WHERE NATURE = GH.NATURE) COA_DESCRIPTION,
					(
					    SELECT
					        SUM(GAT.DEBET)-SUM(GAT.CREDIT) AS TES
					    FROM
					        GL_JOURNAL_AFTER_TAX GAT
					    WHERE
					        GAT.NATURE = GH.NATURE AND GAT.JOURNAL_DESCRIPTION = GH.NO_JOURNAL AND GH.PAYMENT_STATUS <>'RECONCILED'
					    GROUP BY
					        GH.NO_JOURNAL
					) OUTSTANDING,
					'' REVERSE,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-01') TANGGAL_1,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-02') TANGGAL_2,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-03') TANGGAL_3,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-04') TANGGAL_4,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-05') TANGGAL_5,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-06') TANGGAL_6,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-07') TANGGAL_7,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-08') TANGGAL_8,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-09') TANGGAL_9,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-10') TANGGAL_10,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-11') TANGGAL_11,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-12') TANGGAL_12,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-13') TANGGAL_13,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-14') TANGGAL_14,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-15') TANGGAL_15,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-16') TANGGAL_16,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-17') TANGGAL_17,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-18') TANGGAL_18,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-19') TANGGAL_19,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-20') TANGGAL_20,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-21') TANGGAL_21,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-22') TANGGAL_22,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-23') TANGGAL_23,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-24') TANGGAL_24,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-25') TANGGAL_25,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-26') TANGGAL_26,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-27') TANGGAL_27,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-28') TANGGAL_28,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-29') TANGGAL_29,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-30') TANGGAL_30,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-31') TANGGAL_31
					FROM GL_HEADERS GH
					WHERE 
					GH.APPROVED = 'Y'
					AND YEAR(GH.TGL_INVOICE)=$year AND MONTH(GH.TGL_INVOICE)=$month
					AND SUBSTR(GH.NATURE,1,3) <>'213'
					GROUP BY GH.NATURE ";

		$queryData = query_datatable($mainQuery);

		$total = $this->db->query($mainQuery)->num_rows();
		$data  = $this->db->query($queryData)->result_array();

		$result['data']       = $data;
		$result['total_data'] = $total;

		return $result;	

	}

	function get_cetak($year, $month){

		$month_new = "";
		if($month < 10){
			$month_new = '0'.$month;
		}else{
			$month_new = $month;
		}

		$tanggal = $year.'-'.$month_new;

		$sql = " SELECT GH.NATURE,(SELECT DESCRIPTION FROM MASTER_COA WHERE NATURE = GH.NATURE) COA_DESCRIPTION,
					(
					    SELECT
					        SUM(GAT.DEBET)-SUM(GAT.CREDIT) AS TES
					    FROM
					        GL_JOURNAL_AFTER_TAX GAT
					    WHERE
					        GAT.NATURE = GH.NATURE AND GAT.JOURNAL_DESCRIPTION = GH.NO_JOURNAL AND GH.PAYMENT_STATUS <>'RECONCILED'
					    GROUP BY
					        GH.NO_JOURNAL
					) OUTSTANDING,
					'' REVERSE,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-01') TANGGAL_1,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-02') TANGGAL_2,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-03') TANGGAL_3,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-04') TANGGAL_4,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-05') TANGGAL_5,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-06') TANGGAL_6,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-07') TANGGAL_7,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-08') TANGGAL_8,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-09') TANGGAL_9,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-10') TANGGAL_10,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-11') TANGGAL_11,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-12') TANGGAL_12,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-13') TANGGAL_13,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-14') TANGGAL_14,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-15') TANGGAL_15,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-16') TANGGAL_16,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-17') TANGGAL_17,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-18') TANGGAL_18,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-19') TANGGAL_19,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-20') TANGGAL_20,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-21') TANGGAL_21,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-22') TANGGAL_22,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-23') TANGGAL_23,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-24') TANGGAL_24,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-25') TANGGAL_25,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-26') TANGGAL_26,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-27') TANGGAL_27,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-28') TANGGAL_28,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-29') TANGGAL_29,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-30') TANGGAL_30,
					(SELECT NVL(SUM(BP.DPP),0) DPP
					FROM 
					POST_CLEARING_BANK PCB,
					BATCH_PAYMENT BP
					WHERE
					BP.NO_JOURNAL = PCB.REFERENCE
					AND BP.NATURE = GH.NATURE AND DATE(PCB.TRANSACTION_DATE) = '$tanggal-31') TANGGAL_31
					FROM GL_HEADERS GH
					WHERE 
					GH.APPROVED = 'Y'
					AND YEAR(GH.TGL_INVOICE)=$year AND MONTH(GH.TGL_INVOICE)=$month
					AND SUBSTR(GH.NATURE,1,3) <>'213'
					GROUP BY GH.NATURE";

		$query = $this->db->query($sql);

		return $query;
	}

}